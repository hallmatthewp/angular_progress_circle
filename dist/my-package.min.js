var app,circleRadius,cornerRadius,default25DeltaColor,default50DeltaColor,defaultActualArcColor,defaultCircleColor,defaultDelay,defaultDuration,defaultEase,defaultExpectedArcColor,defaultTextColor,defaultTextFontFamily,defaultTextFontSize,defaultTextPercentColor,defaultTextPercentFontFamily,defaultTextPercentFontSize,innerPercent,innerRadius,innerThickness,outerPercent,outerRadius,outerThickness,sizeMultiplier,svgHeight,svgWidth,textPercentYPos,textYPos;sizeMultiplier=1.5,svgHeight=500*sizeMultiplier,svgWidth=500*sizeMultiplier,innerRadius=90*sizeMultiplier,outerRadius=110*sizeMultiplier,cornerRadius=20*sizeMultiplier,circleRadius=70*sizeMultiplier,innerPercent=.15*sizeMultiplier,outerPercent=.5*sizeMultiplier,innerThickness=5*sizeMultiplier,outerThickness=18*sizeMultiplier,textYPos=20*sizeMultiplier,textPercentYPos=-3*sizeMultiplier,defaultActualArcColor="#78C000",defaultExpectedArcColor="#C7E596",default50DeltaColor="red",default25DeltaColor="orange",defaultCircleColor="#F4F4F4",defaultTextColor="#777777",defaultTextPercentColor="#444444",defaultTextFontSize=15*sizeMultiplier+"px",defaultTextPercentFontSize=40*sizeMultiplier+"px",defaultTextFontFamily="sans-serif",defaultTextPercentFontFamily="sans-serif",defaultDuration=2e3,defaultDelay=150,defaultEase="elastic",app=angular.module("ProgressCircleApp",[]),app.controller("ProgressCircle",["$scope",function(e){return e.actual=.73,e.expected=.5}]),app.directive("progressCircle",function(){return{restrict:"EA",replace:!0,template:"<svg width='"+svgWidth+"' height='"+svgHeight+"'></svg>",link:function(e,t,l){var r,a,n,o,i,c,u,s,d,f,p,x,g,h,A,C;return u=function(){return console.log("drawCircle: "+circleRadius),g.append("circle").attr("r",circleRadius).style("fill",defaultCircleColor)},d=function(e){return console.log("drawText: "+e),g.append("text").text("Progress").attr("font-size",defaultTextFontSize).attr("font-family",defaultTextFontFamily).attr("fill",defaultTextColor).style("text-anchor","middle").attr("transform","translate(0, "+textYPos+")"),g.append("text").text((100*e).toFixed(0)+"%").attr("font-size",defaultTextPercentFontSize).attr("font-family",defaultTextPercentFontFamily).attr("fill",defaultTextColor).style("text-anchor","middle").attr("transform","translate(0, "+textPercentYPos+")")},n=function(e,t,l){var r;return console.log("drawArc: "+e+", "+t),r=d3.svg.arc().innerRadius(t-l).outerRadius(t).cornerRadius(cornerRadius).startAngle(0)},i=function(e,t){var l;return console.log("drawArc"),l=g.append("path").datum({endAngle:0}).style("fill",t).attr("d",e)},s=function(){return console.log("drawExpectedArc"),this.expectedArc=n(l.expected,innerRadius,innerThickness),this.expectedArcValue=i(this.expectedArc,defaultExpectedArcColor)},o=function(){var e;return console.log("drawActualArc"),e=p(l.actual,l.expected),this.actualArc=n(l.actual,outerRadius,outerThickness),this.actualArcValue=i(this.actualArc,e),this.textPercent=d(l.actual)},c=function(){return console.log("drawBothArcs"),o(),s()},r=function(){return console.log("actualChangeHandler"),x(),h()},f=function(){return console.log("expectedChangeHandler"),x(),h(),C()},C=function(){return console.log("transitionExpectedArc"),A(this.expectedArc,this.expectedArcValue,l.expected,defaultExpectedArcColor)},h=function(){var e,t;return console.log("transitionActualArc"),e=p(l.actual,l.expected),A(this.actualArc,this.actualArcValue,l.actual,e),t=100*l.actual,this.textPercent.transition().text(t.toFixed(0)+"%")},A=function(e,t,l,r){return console.log("transitionArc. percent: "+l),t.transition().delay(defaultDelay).duration(defaultDuration).ease(defaultEase).style("fill",r).call(a,e,2*Math.PI*l)},a=function(e,t,l){return console.log("arcTween. newAngle: "+l),e.attrTween("d",function(e){var r;return r=d3.interpolate(e.endAngle,l),function(l){return e.endAngle=r(l),t(e)}})},p=function(e,t){return console.log("getActualArcColor: "+e+", "+t),console.log("checking color: actual: "+e+", "+t),t-e>.5?(console.log("50% delta"),default50DeltaColor):t-e>.25?(console.log("25% delta"),default25DeltaColor):defaultActualArcColor},x=function(){return console.log("sanitizeInputs before: "+l.actual+", "+l.expected),isNaN(l.actual)&&(l.actual=0),isNaN(l.expected)&&(l.expected=0),l.actual>1&&(l.actual=1),l.actual<0&&(l.actual=0),l.expected>1&&(l.expected=1),l.expected<0&&(l.expected=0),console.log("sanitizeInputs after: "+l.actual+", "+l.expected)},g=d3.select("svg").append("g").attr("transform","translate("+svgWidth/2+", "+svgHeight/2+")"),x(),u(),c(),e.$watch("expected",f),e.$watch("actual",r)}}});